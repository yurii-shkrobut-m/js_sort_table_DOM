{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,I,EAAM,EAAO,SAAS,aAAa,CAAC,SAC9B,EAAO,SAAS,aAAa,CAAC,SAC9B,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAgB,SAAS,aAAa,CAAC,SAAS,QAAQ,G,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAE9D,EAAK,gBAAgB,CAAC,QAAS,SAAC,CAAhC,EACE,IAAM,EAAQ,EAAE,MAAM,CAAC,SAAS,CAEhC,EAAU,IAAI,CAAC,SAAC,CAAA,CAAM,CAAtB,EACE,IAAM,EAAQ,EAAK,QAAQ,CAAC,EAAM,CAAC,WAAW,CACxC,EAAQ,EAAK,QAAQ,CAAC,EAAM,CAAC,WAAW,QAE9C,AAAI,GAAS,EACJ,EAAM,aAAa,CAAC,GAGzB,AAAU,IAAV,EACK,CAAC,EAAQ,CAAC,EAGf,AAAU,IAAV,EACK,WAAW,EAAM,KAAK,CAAC,IAAM,WAAW,EAAM,KAAK,CAAC,UAE/D,GAEA,EAAK,SAAS,CAAG,GAEjB,EAAU,OAAO,CAAC,SAAC,CAAnB,EACE,EAAK,MAAM,CAAC,EACd,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar head = document.querySelector(\"thead\");\nvar body = document.querySelector(\"tbody\");\nvar employees = _to_consumable_array(document.querySelector(\"tbody\").children);\nhead.addEventListener(\"click\", function(e) {\n    var index = e.target.cellIndex;\n    employees.sort(function(row1, row2) {\n        var item1 = row1.children[index].textContent;\n        var item2 = row2.children[index].textContent;\n        if (index <= 1) return item1.localeCompare(item2);\n        if (index === 2) return +item1 - +item2;\n        if (index === 3) return parseFloat(item1.slice(1)) - parseFloat(item2.slice(1));\n    });\n    body.innerHTML = \"\";\n    employees.forEach(function(row) {\n        body.append(row);\n    });\n});\n\n//# sourceMappingURL=index.f82f2c34.js.map\n","'use strict';\n\nconst head = document.querySelector('thead');\nconst body = document.querySelector('tbody');\nconst employees = [...document.querySelector('tbody').children];\n\nhead.addEventListener('click', (e) => {\n  const index = e.target.cellIndex;\n\n  employees.sort((row1, row2) => {\n    const item1 = row1.children[index].textContent;\n    const item2 = row2.children[index].textContent;\n\n    if (index <= 1) {\n      return item1.localeCompare(item2);\n    }\n\n    if (index === 2) {\n      return +item1 - +item2;\n    }\n\n    if (index === 3) {\n      return parseFloat(item1.slice(1)) - parseFloat(item2.slice(1));\n    }\n  });\n\n  body.innerHTML = '';\n\n  employees.forEach((row) => {\n    body.append(row);\n  });\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","head","document","querySelector","body","employees","_array_without_holes","isArray","children","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","addEventListener","e","index","target","cellIndex","sort","row1","row2","item1","textContent","item2","localeCompare","parseFloat","innerHTML","forEach","row","append"],"version":3,"file":"index.f82f2c34.js.map"}